{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAUC,SAASC,cAAc,kBACjCC,EAASF,SAASC,cAAc,iBAChCE,EAAWH,SAASC,cAAc,mBAGxC,SAASG,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAUR,EAAQC,EAAOF,EAC/BU,YAAW,KACLJ,EACFF,EAAQ,uBAAqBJ,EAAY,QAASS,OAEhDJ,EAAK,sBAAoBL,EAAU,QAASS,MAAY,GAE3DA,EAAQ,G,CAZFd,SAASC,cAAc,SA6B/Be,iBAAiB,UAbtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAASiB,MAAOD,IACnCf,EAAce,EAAGE,OAAOtB,EAAQqB,OAAQC,OAAOnB,EAAOkB,QACnDE,MAAKF,IACJG,EAAA1B,GAAS2B,OAAOC,QAAQL,EAAM,IAE/BM,OAAMC,IACLJ,EAAA1B,GAAS2B,OAAOI,QAAQD,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst inDelay = document.querySelector('[name=\"delay\"]');\nconst inStep = document.querySelector('[name=\"step\"]');\nconst inAmount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay, step) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const timeOut = delay + step * position;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position + 1} in ${timeOut}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position + 1} in ${timeOut}ms`);\n      }\n    }, timeOut);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  for (let i = 0; i < +inAmount.value; i++) {\n    createPromise(i, Number(inDelay.value), Number(inStep.value))\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n  }\n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$inDelay","document","querySelector","$47d4ff9957288465$var$inStep","$47d4ff9957288465$var$inAmount","$47d4ff9957288465$var$createPromise","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","timeOut","setTimeout","addEventListener","event","preventDefault","i","value","Number","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.ff59e42f.js.map"}